I want to be able to easily detect the models in a .NET assembly that are expected to be converted to a given language. 
This means that every instance will inherit a IViewModel or IShouldBeConverted interface so it can be detected easily. 

The main code should look something like this which can be invoked at app start:

	// Initialize, set language target and export to file.
	ConversionKernel
		.Initialize(Assembly)
		.EcmaScript(Version)
		.ExportTo(FilePath);

I also want to be able specify variations of the code above, such as:
	- Asynchronous
	- Other languages, extend the Converter instance.
	- Override type-mapping
	- Custom validation template(s)
	- Support type inheritance
	- Support basic .NET ComponentAttributes for validation

TODO:	
	- Support TypeScript
	- Support inherited methods
	- Support dependency injection (requireJs, import / export)
	- Able to write to file.
	- Able to validate template completion.